{"version":3,"sources":["webpack:///./node_modules/@ethersproject/hash/lib.esm/namehash.js","webpack:///./node_modules/@ethersproject/random/lib.esm/index.js","webpack:///./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/base64/lib.esm/base64.js","webpack:///./node_modules/@ethersproject/wallet/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wallet/lib.esm/index.js","webpack:///./node_modules/@ethersproject/basex/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/sha2.js","webpack:///./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/hashes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/index.js","webpack:///./node_modules/ethers/lib/utils.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/random/lib.esm/shuffle.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/address.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/array.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/null.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/number.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/string.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/abi-coder.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/_version.js","webpack:///./src/views/user/index.vue?bb54","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","webpack:///./node_modules/@ethersproject/random/lib.esm/random.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/bytes32.js","webpack:///./node_modules/@ethersproject/units/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/units/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/message.js","webpack:///./node_modules/@ethersproject/base64/lib.esm/index.js","webpack:///./node_modules/aes-js/index.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/index.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/idna.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/index.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/interface.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/strings.js","webpack:///./node_modules/@ethersproject/web/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/web/lib.esm/geturl.js","webpack:///./node_modules/@ethersproject/web/lib.esm/index.js","webpack:///./src/assets/images/item_1.png","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","webpack:///./node_modules/bech32/index.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/addresses.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/fragments.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/types.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/typed-data.js","webpack:///./src/views/user/index.vue","webpack:///./node_modules/@ethersproject/contracts/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/contracts/lib.esm/index.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/index.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/formatter.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/base-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ws.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/fallback-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ipc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/infura-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/pocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/web3-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/index.js","webpack:///./node_modules/ethers/lib.esm/_version.js","webpack:///./node_modules/ethers/lib.esm/ethers.js","webpack:///./node_modules/ethers/lib.esm/index.js","webpack:///./node_modules/ethereum-multicall/dist/esm/enums/execution-type.js","webpack:///./node_modules/ethereum-multicall/dist/esm/enums/networks.js","webpack:///./node_modules/ethereum-multicall/dist/esm/utils.js","webpack:///./node_modules/ethereum-multicall/dist/esm/multicall.js","webpack:///./src/views/user/index.vue?e3ea","webpack:///./node_modules/@ethersproject/solidity/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/solidity/lib.esm/index.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/index.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/utils.js","webpack:///./node_modules/@ethersproject/random/lib.esm/_version.js"],"names":["logger","Zeros","Uint8Array","fill","Partition","RegExp","isValidName","name","comps","split","i","length","Error","error","namehash","throwArgumentError","current","result","partition","match","label","_constructorGuard","Zero","from","NegativeOne","throwFault","message","fault","operation","value","params","undefined","throwError","errors","NUMERIC_FAULT","zeros","getMultiplier","decimals","toNumber","e","substring","formatFixed","multiplier","negative","lt","mul","fraction","mod","toString","whole","div","parseFixed","wholeValue","fractionValue","wei","add","FixedFormat","constructorGuard","signed","width","UNSUPPORTED_OPERATION","this","String","_multiplier","Object","freeze","parseInt","check","key","type","defaultValue","FixedNumber","hex","format","checkNew","_hex","_value","_isFixedNumber","other","_checkFormat","a","b","fromValue","sub","push","hasFraction","isNegative","subUnsafe","ONE","toFormat","addUnsafe","factor","bump","BUMP","mulUnsafe","floor","divUnsafe","fromTwos","toTwos","toHexString","parseFloat","fromString","fixedFormat","numeric","decimal","fromBytes","code","INVALID_ARGUMENT","version","decode","textData","atob","data","charCodeAt","encode","fromCharCode","btoa","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","done","then","apply","isAccount","privateKey","address","hasMnemonic","mnemonic","phrase","provider","super","signingKey","publicKey","srcMnemonic","path","locale","node","fromMnemonic","derivePath","isSigningKey","curve","isProvider","_mnemonic","_signingKey","transaction","tx","signature","signDigest","domain","types","populated","resolveNames","resolveName","hash","password","options","progressCallback","entropy","random","extraEntropy","json","account","wordlist","verifyMessage","verifyTypedData","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","j","base","string","k","_leader","q","TypeError","bytes","byte","reverse","Base32","Base58","ripemd160","update","digest","sha256","sha512","computeHmac","algorithm","hmac","pbkdf2","salt","iterations","keylen","hashAlgorithm","hLen","l","DK","block1","r","T","set","U","Math","ceil","destPos","len","slice","HashZero","__createBinding","create","o","m","k2","defineProperty","enumerable","get","__setModuleDefault","v","__importStar","__esModule","prototype","hasOwnProperty","call","exports","formatBytes32String","Utf8ErrorFuncs","toUtf8String","toUtf8CodePoints","toUtf8Bytes","_toEscapedUtf8String","nameprep","hexDataSlice","hexDataLength","hexZeroPad","hexValue","hexStripZeros","hexConcat","isHexString","hexlify","base64","base58","TransactionDescription","LogDescription","Interface","SigningKey","HDNode","defaultPath","isBytesLike","isBytes","zeroPad","stripZeros","concat","arrayify","shallowCopy","resolveProperties","getStatic","defineReadOnly","deepCopy","checkProperties","poll","fetchJson","_fetchData","RLP","Logger","checkResultErrors","FormatTypes","ParamType","FunctionFragment","EventFragment","ErrorFragment","ConstructorFragment","Fragment","defaultAbiCoder","AbiCoder","Indexed","Utf8ErrorReason","UnicodeNormalizationForm","SupportedAlgorithm","mnemonicToSeed","isValidMnemonic","entropyToMnemonic","mnemonicToEntropy","getAccountPath","recoverPublicKey","computePublicKey","recoverAddress","computeAddress","getJsonWalletAddress","TransactionTypes","serializeTransaction","parseTransaction","accessListify","joinSignature","splitSignature","soliditySha256","solidityKeccak256","solidityPack","shuffled","randomBytes","keccak256","commify","parseUnits","formatUnits","parseEther","formatEther","isAddress","getCreate2Address","getContractAddress","getIcapAddress","getAddress","_TypedDataEncoder","id","hashMessage","parseBytes32String","abi_1","address_1","basex_1","bytes_1","hash_1","hdnode_1","json_wallets_1","keccak256_1","logger_1","sha2_1","solidity_1","pack","random_1","properties_1","signing_key_1","strings_1","transactions_1","parse","serialize","units_1","wallet_1","web_1","sha2_2","strings_2","checkErrors","object","Array","isArray","childPath","Coder","localName","dynamic","Writer","wordSize","_data","_dataLength","_padding","writer","_writeData","paddingOffset","BUFFER_OVERRUN","offset","_getValue","Reader","coerceFunc","allowLoose","_offset","_coerceFunc","coerce","loose","alignedLength","_peekBytes","readBytes","array","tmp","words","loadWords","lang","replace","toLowerCase","index","word","indexOf","langEn","register","wordlists","en","_throwError","writeValue","reader","readValue","coder","coders","values","arrayValues","unique","map","argument","staticWriter","dynamicWriter","updateFuncs","forEach","dynamicOffset","updateFunc","writeUpdatableValue","baseOffset","func","appendWriter","unpack","baseReader","subReader","offsetReader","baseType","uniqueNames","reduce","accum","defaultChild","count","checkArgumentCount","isZero","writeBytes","size","maxUintValue","mask","bounds","gt","join","paramTypeBytes","paramTypeNumber","param","_getCoder","arrayChildren","arrayLength","components","component","_getWordSize","_getWriter","_getReader","isCrowdsaleWallet","JSON","encseed","ethaddr","isKeystoreWallet","getGlobal","self","window","global","anyGlobal","crypto","msCrypto","getRandomValues","warn","buffer","text","names","suffix","formatted","unshift","unitName","ether","messagePrefix","root","checkInt","checkInts","arrayish","coerceArray","arg","copy","ArrayBuffer","isView","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","toBytes","encodeURI","c","substr","convertHex","Hex","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","t","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","pkcs7pad","padder","pkcs7strip","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","utf8","padding","pkcs7","pad","strip","_arrayTest","module","allowedTransactionKeys","forwardErrors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","checkAbstract","blockTag","_checkProvider","getBalance","getTransactionCount","checkTransaction","estimateGas","populateTransaction","signedTx","signTransaction","sendTransaction","network","getNetwork","chainId","getGasPrice","getFeeData","all","to","catch","hasEip1559","maxFeePerGas","maxPriorityFeePerGas","gasPrice","feeData","nonce","gasLimit","UNPREDICTABLE_GAS_LIMIT","getChainId","results","_isSigner","_fail","bytes2","createTable","lo","pair","createRangeTable","hi","h","matchMap","ranges","range","d","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","s","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","flatten","_nameprepTableA1","codepoint","_nameprepTableB2","codes","shift","complex","_nameprepTableC","codesTableB2","NFKC","KeystoreAccount","_isKeystoreAccount","_decrypt","cipher","aesCtr","_getAccount","computedMAC","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","pbkdf2Sync","passwordBytes","dkLen","prfFunc","_computeKdfKey","pbkdf2Func","scryptFunc","kdf","N","p","prf","decryptSync","syncScrypt","scrypt","client","uuidRandom","uuid","derivedKey","macPrefix","mac","Crypto","cipherparams","kdfparams","n","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","stringify","ErrorDescription","_isIndexed","BuiltinErrors","inputs","reason","wrapAccessError","property","wrap","fragments","abi","fragment","filter","bucket","deploy","functions","events","payable","full","sighash","eventFragment","nameOrSignatureOrSighash","getSighash","trim","matching","keys","f","nameOrSignatureOrTopic","topichash","getEventTopic","constructor","getFunction","getError","_","getEvent","_abiCoder","_encodeParams","_decodeParams","functionFragment","errorArgs","errorName","errorSignature","outputs","selector","builtin","CALL_EXCEPTION","method","UNEXPECTED_ARGUMENT","topics","anonymous","encodeTopic","indexed","pop","dataTypes","dataValues","topicHash","expected","nonIndexed","fromObject","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","args","log","topic","decodeEventLog","hexData","errorFragment","_isInterface","EtherSymbol","getUrl","href","request","headers","body","skipFetchSetup","mode","cache","credentials","redirect","referrer","response","fetch","arrayBuffer","statusCode","status","statusMessage","statusText","staller","duration","setTimeout","bodyify","connection","processFunc","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","url","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","reData","dataMatch","SERVER_ERROR","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","makeError","TIMEOUT","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","pow","serverError","throttleRetry","race","processJsonFunc","updated","hasContentType","ceiling","interval","retryLimit","oncePoll","once","onceBlock","exportWordlist","getWord","getWordIndex","_ethers","ALPHABET","ALPHABET_MAP","z","x","polymodStep","pre","prefixChk","prefix","chk","LIMIT","__decode","str","lowered","uppered","toUpperCase","lastIndexOf","wordChars","decodeUnsafe","res","arguments","convert","inBits","outBits","bits","maxV","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","AddressZero","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","parseParamType","allowIndexed","originalParam","newNode","parent","state","allowType","allowParams","verifyType","child","allowName","allowArray","sibling","readArray","populate","minimal","paramTypeArray","_isParamType","comp","isParamType","ParamTypify","parseParams","allowIndex","splitNesting","_isFragment","isFragment","input","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","gas","parseModifiers","constant","stateMutability","verifyState","isConstructorFragment","parens","output","isFunctionFragment","returns","checkForbidden","sig","isErrorFragment","regexIdentifier","depth","_isCrowdsaleAccount","encryptedSeed","aesCbc","seed","seedHex","seedHexBytes","decryptJsonWallet","decryptJsonWalletSync","One","MaxUint256","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","encodeType","fields","TypedDataEncoder","links","parents","subtypes","field","encoder","primaryTypes","checkCircular","found","subtype","primaryType","st","sort","_types","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","encodeData","hashStruct","callback","_visit","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","class","_createElementVNode","src","_imports_0","alt","_createElementBlock","_createVNode","_component_HeadTop","title","isShowTop","isSubHeader","_hoisted_2","_hoisted_4","_hoisted_7","_toDisplayString","_ctx","_hoisted_10","_hoisted_13","_hoisted_16","_hoisted_19","_hoisted_22","_hoisted_25","_Fragment","_renderList","item","_hoisted_27","reward","onClick","_hoisted_31","accessList","customData","resolver","nameOrPromise","resolveAddresses","paramType","contract","overrides","signer","override","resolved","resolvedAddress","interface","encodeFunctionData","ro","intrinsic","roValue","leftovers","buildPopulate","buildEstimate","signerOrProvider","addContractWait","wait","bind","confirmations","receipt","logs","event","parsed","parseLog","eventSignature","removeListener","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","deployTransaction","_deployed","decodeFunctionResult","buildSend","txRequest","buildDefault","getEventTag","tag","_listeners","listener","listenerCount","argsCopy","ErrorRunningEvent","contractInterface","prepareEvent","decodeError","addressOrName","Contract","isSigner","uniqueFilters","filters","encodeFilterTopics","uniqueSignatures","callStatic","signatures","isInterface","_deployedPromise","getCode","contractAddress","deployed","isIndexed","runningEvent","_runningEvents","eventName","_normalizeRunningEvent","emit","_wrappedEmits","off","_checkRunningEvents","addListener","wrappedEmit","_wrapEvent","getEmit","on","fromBlockOrBlockhash","toBlock","_getRunningEvent","fromBlock","getLogs","_addEventListener","run","listeners","removeAllListeners","bytecode","bytecodeHex","encodeDeploy","unsignedTx","getDeployTransaction","getContract","compilerOutput","MISSING_ARGUMENT","evm","getInterface","isRenetworkable","ethDefaultProvider","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","skip","CloudflareProvider","FallbackProvider","quorum","renetwork","etcDefaultProvider","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","standard","defaultProvider","formats","getDefaultFormats","bigNumber","number","strictData","allowNull","blockNumber","transactionIndex","uint256","creates","raw","transactionRequest","receiptLog","arrayOf","logIndex","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","parentHash","difficulty","miner","extraData","transactions","baseFeePerGas","blockWithTransactions","transactionResponse","filterLog","removed","boolean","allowFalsish","strict","author","_difficulty","_block","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","checkTopic","serializeTopics","sorted","deserializeTopics","isForkEvent","getTime","PollableEvents","coinInfos","symbol","p2pkh","p2sh","ilk","bytes32ify","base58Encode","sha2","matcherIpfs","matchers","_parseString","_parseBytes","getIpfsLink","link","formatter","parameters","coinType","hexBytes","coinInfo","callAddress","_fetchBytes","_getAddress","linkage","content","avatar","getText","scheme","owner","_resolvedAddress","addr","tokenId","tokenOwner","balance","metadataUrl","metadata","imageUrl","image","ipfs","swarm","keyBytes","defaultFormatter","nextPollId","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","NETWORK_ERROR","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","getBlockNumber","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","mined","getBlockWithTransactions","ti","waitForTransaction","eq","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","unref","_getBlockTag","position","expectedHash","returnedHash","confirms","signedTransaction","hexTx","_getTransactionRequest","blockHashOrBlockTag","includeTransactions","blockWithTxs","_getBlock","_getFilter","_getResolver","getResolver","reverseName","resolverAddress","nameOrAddress","getAvatar","NOT_IMPLEMENTED","pollable","_startEvent","stopped","eventTag","_stopEvent","errorGas","checkError","responseText","getResult","payload","getLowerCase","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","sender","hexlifyTransaction","sendUncheckedTransaction","getPayload","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","getSigner","connectUnchecked","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","NextId","_wsReady","_websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_detectNetwork","rid","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","CONNECTING","onerror","close","_super","apiKey","defaultApiKey","host","getTransactionPostData","maxFeePerGs","storageKeys","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getPostData","procFunc","payloadStr","txhash","postData","topic0","blocks","ethusd","endBlock","startblock","endblock","timeStamp","checkNetworks","median","maxDelta","middle","isBigNumber","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","start","normalizedTally","normalize","configs","tally","getProcessFunc","_highestBlockNumber","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","stallTimeout","priority","total","shuffle","first","t0","inflightWeight","backend","waiting","errorCode","props","IpcProvider","defaultProjectId","projectId","projectSecret","apiKeyObj","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","buildEip1193Fetcher","jsonRpcFetchFunc","subprovider","isMetaMask","sendAsync","getDefaultProvider","NodesmithProvider","Web3Provider","ExecutionType","Networks","Utils","deepClone","__generator","y","g","sent","trys","ops","verb","Symbol","iterator","op","Multicall","_options","ABI","internalType","web3Instance","_executionType","web3","ethersProvider","ethers","nodeUrl","customHttp","contractCallContexts","aggregateResponse","returnObject","contractCallsResults","originalContractCallContext","returnObjectResult","methodContext","originalContractCallMethodContext","outputTypes","decodedReturnValues","_a","execute","buildAggregateCallContext","contractContextIndex","callsReturnContext","methodResults","calls","contractMethodIndex","findOutputTypesFromAbi","methodName","tryAggregate","success","getReturnDataFromResult","returnValues","formatReturnValues","decoded","reference","methodParameters","returnData","decodedReturnResults","aggregateCallContext","contractContext","executingInterface","encodedData","target","_b","executeWithWeb3","executeWithEthersOrCustom","contractResponse","getTypedOptions","eth","net","getId","getContractBasedOnNetwork","methods","tryBlockAndAggregate","mapCallContextToMatchContractFormat","buildUpAggregateResponse","aggregate","customProvider","_loop_1","existingResponse","find","callData","multicallCustomContractAddress","bsc","bsc_testnet","mumbai","etherlite","avalauncheFuji","avalauncheMainnet","fantom","HeadTop","setup","store","useStore","reactive","computed","swapContract","usdtContract","kttContract","ktmContract","nftContract","usdtBalance","kttBalance","ktmBalance","teamAmount","investAmount","totalPerformance","nftArr","initContract","swapAbi","swapAddress","tokenAbi","usdtAddress","kttAddress","ktmAddress","nftAbi","nftAddress","initData","getNftData","getPerformance","kttDecimals","usdtDecimals","ktmDecimals","balanceOf","BigNumber","dividedBy","toFixed","getUserInfo","userInfo","getUserAllTokens","ids","multicall","multicallAddress","callArr","contractCallContext","list","arr","hexToNumberString","getNftReward","Toast","watch","val","refData","toRefs","__exports__","render","regexBytes","regexNumber","regexArray","_pack","byteLength","tight","_isForkEvent","_isProvider","MasterSecret","HardenedBit","getUpperMask","getLowerMask","bytes32","base58check","getWordlist","parentFingerprint","chainCode","mnemonicOrPath","compressedPublicKey","I","IL","IR","ki","Ki","ek","_addPoint","fingerprint","_derive","seedArray","_fromSeed","extendedKey","NFKD","checkNormalize","bit","entropyBits","checksumBits","checksumMask","checksum","indices","remainingBits","looseArrayify","hexString","zpad","getPassword","searchPath","currentChild","matchingChild","uuidV4"],"mappings":"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","file":"static/js/chunk-1b41feba.48338343.js","sourcesContent":["import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\n//# sourceMappingURL=namehash.js.map","\"use strict\";\nexport { randomBytes } from \"./random\";\nexport { shuffled } from \"./shuffle\";\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","export const version = \"abi/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","export const version = \"wallet/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nexport class BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexport { Base32, Base58 };\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map","export const version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","\"use strict\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Indexed, Interface, LogDescription, TransactionDescription } from \"./interface\";\nexport { ConstructorFragment, ErrorFragment, EventFragment, Fragment, FunctionFragment, ParamType, FormatTypes, AbiCoder, defaultAbiCoder, Interface, Indexed, checkResultErrors, LogDescription, TransactionDescription };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatBytes32String = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports._toEscapedUtf8String = exports.nameprep = exports.hexDataSlice = exports.hexDataLength = exports.hexZeroPad = exports.hexValue = exports.hexStripZeros = exports.hexConcat = exports.isHexString = exports.hexlify = exports.base64 = exports.base58 = exports.TransactionDescription = exports.LogDescription = exports.Interface = exports.SigningKey = exports.HDNode = exports.defaultPath = exports.isBytesLike = exports.isBytes = exports.zeroPad = exports.stripZeros = exports.concat = exports.arrayify = exports.shallowCopy = exports.resolveProperties = exports.getStatic = exports.defineReadOnly = exports.deepCopy = exports.checkProperties = exports.poll = exports.fetchJson = exports._fetchData = exports.RLP = exports.Logger = exports.checkResultErrors = exports.FormatTypes = exports.ParamType = exports.FunctionFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.Fragment = exports.defaultAbiCoder = exports.AbiCoder = void 0;\nexports.Indexed = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = exports.SupportedAlgorithm = exports.mnemonicToSeed = exports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.getAccountPath = exports.verifyTypedData = exports.verifyMessage = exports.recoverPublicKey = exports.computePublicKey = exports.recoverAddress = exports.computeAddress = exports.getJsonWalletAddress = exports.TransactionTypes = exports.serializeTransaction = exports.parseTransaction = exports.accessListify = exports.joinSignature = exports.splitSignature = exports.soliditySha256 = exports.solidityKeccak256 = exports.solidityPack = exports.shuffled = exports.randomBytes = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.computeHmac = exports.commify = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.isAddress = exports.getCreate2Address = exports.getContractAddress = exports.getIcapAddress = exports.getAddress = exports._TypedDataEncoder = exports.id = exports.isValidName = exports.namehash = exports.hashMessage = exports.parseBytes32String = void 0;\nvar abi_1 = require(\"@ethersproject/abi\");\nObject.defineProperty(exports, \"AbiCoder\", { enumerable: true, get: function () { return abi_1.AbiCoder; } });\nObject.defineProperty(exports, \"checkResultErrors\", { enumerable: true, get: function () { return abi_1.checkResultErrors; } });\nObject.defineProperty(exports, \"ConstructorFragment\", { enumerable: true, get: function () { return abi_1.ConstructorFragment; } });\nObject.defineProperty(exports, \"defaultAbiCoder\", { enumerable: true, get: function () { return abi_1.defaultAbiCoder; } });\nObject.defineProperty(exports, \"ErrorFragment\", { enumerable: true, get: function () { return abi_1.ErrorFragment; } });\nObject.defineProperty(exports, \"EventFragment\", { enumerable: true, get: function () { return abi_1.EventFragment; } });\nObject.defineProperty(exports, \"FormatTypes\", { enumerable: true, get: function () { return abi_1.FormatTypes; } });\nObject.defineProperty(exports, \"Fragment\", { enumerable: true, get: function () { return abi_1.Fragment; } });\nObject.defineProperty(exports, \"FunctionFragment\", { enumerable: true, get: function () { return abi_1.FunctionFragment; } });\nObject.defineProperty(exports, \"Indexed\", { enumerable: true, get: function () { return abi_1.Indexed; } });\nObject.defineProperty(exports, \"Interface\", { enumerable: true, get: function () { return abi_1.Interface; } });\nObject.defineProperty(exports, \"LogDescription\", { enumerable: true, get: function () { return abi_1.LogDescription; } });\nObject.defineProperty(exports, \"ParamType\", { enumerable: true, get: function () { return abi_1.ParamType; } });\nObject.defineProperty(exports, \"TransactionDescription\", { enumerable: true, get: function () { return abi_1.TransactionDescription; } });\nvar address_1 = require(\"@ethersproject/address\");\nObject.defineProperty(exports, \"getAddress\", { enumerable: true, get: function () { return address_1.getAddress; } });\nObject.defineProperty(exports, \"getCreate2Address\", { enumerable: true, get: function () { return address_1.getCreate2Address; } });\nObject.defineProperty(exports, \"getContractAddress\", { enumerable: true, get: function () { return address_1.getContractAddress; } });\nObject.defineProperty(exports, \"getIcapAddress\", { enumerable: true, get: function () { return address_1.getIcapAddress; } });\nObject.defineProperty(exports, \"isAddress\", { enumerable: true, get: function () { return address_1.isAddress; } });\nvar base64 = __importStar(require(\"@ethersproject/base64\"));\nexports.base64 = base64;\nvar basex_1 = require(\"@ethersproject/basex\");\nObject.defineProperty(exports, \"base58\", { enumerable: true, get: function () { return basex_1.Base58; } });\nvar bytes_1 = require(\"@ethersproject/bytes\");\nObject.defineProperty(exports, \"arrayify\", { enumerable: true, get: function () { return bytes_1.arrayify; } });\nObject.defineProperty(exports, \"concat\", { enumerable: true, get: function () { return bytes_1.concat; } });\nObject.defineProperty(exports, \"hexConcat\", { enumerable: true, get: function () { return bytes_1.hexConcat; } });\nObject.defineProperty(exports, \"hexDataSlice\", { enumerable: true, get: function () { return bytes_1.hexDataSlice; } });\nObject.defineProperty(exports, \"hexDataLength\", { enumerable: true, get: function () { return bytes_1.hexDataLength; } });\nObject.defineProperty(exports, \"hexlify\", { enumerable: true, get: function () { return bytes_1.hexlify; } });\nObject.defineProperty(exports, \"hexStripZeros\", { enumerable: true, get: function () { return bytes_1.hexStripZeros; } });\nObject.defineProperty(exports, \"hexValue\", { enumerable: true, get: function () { return bytes_1.hexValue; } });\nObject.defineProperty(exports, \"hexZeroPad\", { enumerable: true, get: function () { return bytes_1.hexZeroPad; } });\nObject.defineProperty(exports, \"isBytes\", { enumerable: true, get: function () { return bytes_1.isBytes; } });\nObject.defineProperty(exports, \"isBytesLike\", { enumerable: true, get: function () { return bytes_1.isBytesLike; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return bytes_1.isHexString; } });\nObject.defineProperty(exports, \"joinSignature\", { enumerable: true, get: function () { return bytes_1.joinSignature; } });\nObject.defineProperty(exports, \"zeroPad\", { enumerable: true, get: function () { return bytes_1.zeroPad; } });\nObject.defineProperty(exports, \"splitSignature\", { enumerable: true, get: function () { return bytes_1.splitSignature; } });\nObject.defineProperty(exports, \"stripZeros\", { enumerable: true, get: function () { return bytes_1.stripZeros; } });\nvar hash_1 = require(\"@ethersproject/hash\");\nObject.defineProperty(exports, \"_TypedDataEncoder\", { enumerable: true, get: function () { return hash_1._TypedDataEncoder; } });\nObject.defineProperty(exports, \"hashMessage\", { enumerable: true, get: function () { return hash_1.hashMessage; } });\nObject.defineProperty(exports, \"id\", { enumerable: true, get: function () { return hash_1.id; } });\nObject.defineProperty(exports, \"isValidName\", { enumerable: true, get: function () { return hash_1.isValidName; } });\nObject.defineProperty(exports, \"namehash\", { enumerable: true, get: function () { return hash_1.namehash; } });\nvar hdnode_1 = require(\"@ethersproject/hdnode\");\nObject.defineProperty(exports, \"defaultPath\", { enumerable: true, get: function () { return hdnode_1.defaultPath; } });\nObject.defineProperty(exports, \"entropyToMnemonic\", { enumerable: true, get: function () { return hdnode_1.entropyToMnemonic; } });\nObject.defineProperty(exports, \"getAccountPath\", { enumerable: true, get: function () { return hdnode_1.getAccountPath; } });\nObject.defineProperty(exports, \"HDNode\", { enumerable: true, get: function () { return hdnode_1.HDNode; } });\nObject.defineProperty(exports, \"isValidMnemonic\", { enumerable: true, get: function () { return hdnode_1.isValidMnemonic; } });\nObject.defineProperty(exports, \"mnemonicToEntropy\", { enumerable: true, get: function () { return hdnode_1.mnemonicToEntropy; } });\nObject.defineProperty(exports, \"mnemonicToSeed\", { enumerable: true, get: function () { return hdnode_1.mnemonicToSeed; } });\nvar json_wallets_1 = require(\"@ethersproject/json-wallets\");\nObject.defineProperty(exports, \"getJsonWalletAddress\", { enumerable: true, get: function () { return json_wallets_1.getJsonWalletAddress; } });\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return keccak256_1.keccak256; } });\nvar logger_1 = require(\"@ethersproject/logger\");\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return logger_1.Logger; } });\nvar sha2_1 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return sha2_1.computeHmac; } });\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return sha2_1.ripemd160; } });\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha2_1.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha2_1.sha512; } });\nvar solidity_1 = require(\"@ethersproject/solidity\");\nObject.defineProperty(exports, \"solidityKeccak256\", { enumerable: true, get: function () { return solidity_1.keccak256; } });\nObject.defineProperty(exports, \"solidityPack\", { enumerable: true, get: function () { return solidity_1.pack; } });\nObject.defineProperty(exports, \"soliditySha256\", { enumerable: true, get: function () { return solidity_1.sha256; } });\nvar random_1 = require(\"@ethersproject/random\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return random_1.randomBytes; } });\nObject.defineProperty(exports, \"shuffled\", { enumerable: true, get: function () { return random_1.shuffled; } });\nvar properties_1 = require(\"@ethersproject/properties\");\nObject.defineProperty(exports, \"checkProperties\", { enumerable: true, get: function () { return properties_1.checkProperties; } });\nObject.defineProperty(exports, \"deepCopy\", { enumerable: true, get: function () { return properties_1.deepCopy; } });\nObject.defineProperty(exports, \"defineReadOnly\", { enumerable: true, get: function () { return properties_1.defineReadOnly; } });\nObject.defineProperty(exports, \"getStatic\", { enumerable: true, get: function () { return properties_1.getStatic; } });\nObject.defineProperty(exports, \"resolveProperties\", { enumerable: true, get: function () { return properties_1.resolveProperties; } });\nObject.defineProperty(exports, \"shallowCopy\", { enumerable: true, get: function () { return properties_1.shallowCopy; } });\nvar RLP = __importStar(require(\"@ethersproject/rlp\"));\nexports.RLP = RLP;\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\nObject.defineProperty(exports, \"computePublicKey\", { enumerable: true, get: function () { return signing_key_1.computePublicKey; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return signing_key_1.recoverPublicKey; } });\nObject.defineProperty(exports, \"SigningKey\", { enumerable: true, get: function () { return signing_key_1.SigningKey; } });\nvar strings_1 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"formatBytes32String\", { enumerable: true, get: function () { return strings_1.formatBytes32String; } });\nObject.defineProperty(exports, \"nameprep\", { enumerable: true, get: function () { return strings_1.nameprep; } });\nObject.defineProperty(exports, \"parseBytes32String\", { enumerable: true, get: function () { return strings_1.parseBytes32String; } });\nObject.defineProperty(exports, \"_toEscapedUtf8String\", { enumerable: true, get: function () { return strings_1._toEscapedUtf8String; } });\nObject.defineProperty(exports, \"toUtf8Bytes\", { enumerable: true, get: function () { return strings_1.toUtf8Bytes; } });\nObject.defineProperty(exports, \"toUtf8CodePoints\", { enumerable: true, get: function () { return strings_1.toUtf8CodePoints; } });\nObject.defineProperty(exports, \"toUtf8String\", { enumerable: true, get: function () { return strings_1.toUtf8String; } });\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", { enumerable: true, get: function () { return strings_1.Utf8ErrorFuncs; } });\nvar transactions_1 = require(\"@ethersproject/transactions\");\nObject.defineProperty(exports, \"accessListify\", { enumerable: true, get: function () { return transactions_1.accessListify; } });\nObject.defineProperty(exports, \"computeAddress\", { enumerable: true, get: function () { return transactions_1.computeAddress; } });\nObject.defineProperty(exports, \"parseTransaction\", { enumerable: true, get: function () { return transactions_1.parse; } });\nObject.defineProperty(exports, \"recoverAddress\", { enumerable: true, get: function () { return transactions_1.recoverAddress; } });\nObject.defineProperty(exports, \"serializeTransaction\", { enumerable: true, get: function () { return transactions_1.serialize; } });\nObject.defineProperty(exports, \"TransactionTypes\", { enumerable: true, get: function () { return transactions_1.TransactionTypes; } });\nvar units_1 = require(\"@ethersproject/units\");\nObject.defineProperty(exports, \"commify\", { enumerable: true, get: function () { return units_1.commify; } });\nObject.defineProperty(exports, \"formatEther\", { enumerable: true, get: function () { return units_1.formatEther; } });\nObject.defineProperty(exports, \"parseEther\", { enumerable: true, get: function () { return units_1.parseEther; } });\nObject.defineProperty(exports, \"formatUnits\", { enumerable: true, get: function () { return units_1.formatUnits; } });\nObject.defineProperty(exports, \"parseUnits\", { enumerable: true, get: function () { return units_1.parseUnits; } });\nvar wallet_1 = require(\"@ethersproject/wallet\");\nObject.defineProperty(exports, \"verifyMessage\", { enumerable: true, get: function () { return wallet_1.verifyMessage; } });\nObject.defineProperty(exports, \"verifyTypedData\", { enumerable: true, get: function () { return wallet_1.verifyTypedData; } });\nvar web_1 = require(\"@ethersproject/web\");\nObject.defineProperty(exports, \"_fetchData\", { enumerable: true, get: function () { return web_1._fetchData; } });\nObject.defineProperty(exports, \"fetchJson\", { enumerable: true, get: function () { return web_1.fetchJson; } });\nObject.defineProperty(exports, \"poll\", { enumerable: true, get: function () { return web_1.poll; } });\n////////////////////////\n// Enums\nvar sha2_2 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"SupportedAlgorithm\", { enumerable: true, get: function () { return sha2_2.SupportedAlgorithm; } });\nvar strings_2 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"UnicodeNormalizationForm\", { enumerable: true, get: function () { return strings_2.UnicodeNormalizationForm; } });\nObject.defineProperty(exports, \"Utf8ErrorReason\", { enumerable: true, get: function () { return strings_2.Utf8ErrorReason; } });\n//# sourceMappingURL=utils.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","export const version = \"json-wallets/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","export const version = \"hash/5.5.0\";\n//# sourceMappingURL=_version.js.map","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=2e63bab3&lang=less&scoped=true\"","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","export const version = \"units/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","\"use strict\";\nexport { decode, encode } from \"./base64\";\n//# sourceMappingURL=index.js.map","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","export const version = \"abstract-signer/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst allowedTransactionKeys = [\n    \"accessList\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n;\n;\nexport class Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transaction\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"sendTransaction\");\n            const tx = yield this.populateTransaction(transaction);\n            const signedTx = yield this.signTransaction(tx);\n            return yield this.provider.sendTransaction(signedTx);\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getFeeData\");\n            return yield this.provider.getFeeData();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n                // Prevent this error from causing an UnhandledPromiseException\n                tx.to.catch((error) => { });\n            }\n            // Do not allow mixing pre-eip-1559 and eip-1559 properties\n            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n            }\n            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n            }\n            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n            }\n            else if (tx.type === 0 || tx.type === 1) {\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                    tx.gasPrice = this.getGasPrice();\n                }\n            }\n            else {\n                // We need to get fee data to determine things\n                const feeData = yield this.getFeeData();\n                if (tx.type == null) {\n                    // We need to auto-detect the intended type of this transaction...\n                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        // The network supports EIP-1559!\n                        // Upgrade transaction from null to eip-1559\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            const gasPrice = tx.gasPrice;\n                            delete tx.gasPrice;\n                            tx.maxFeePerGas = gasPrice;\n                            tx.maxPriorityFeePerGas = gasPrice;\n                        }\n                        else {\n                            // Populate missing fee data\n                            if (tx.maxFeePerGas == null) {\n                                tx.maxFeePerGas = feeData.maxFeePerGas;\n                            }\n                            if (tx.maxPriorityFeePerGas == null) {\n                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                            }\n                        }\n                    }\n                    else if (feeData.gasPrice != null) {\n                        // Network doesn't support EIP-1559...\n                        // ...but they are trying to use EIP-1559 properties\n                        if (hasEip1559) {\n                            logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"populateTransaction\"\n                            });\n                        }\n                        // Populate missing fee data\n                        if (tx.gasPrice == null) {\n                            tx.gasPrice = feeData.gasPrice;\n                        }\n                        // Explicitly set untyped transaction to legacy\n                        tx.type = 0;\n                    }\n                    else {\n                        // getFeeData has failed us.\n                        logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"signer.getFeeData\"\n                        });\n                    }\n                }\n                else if (tx.type === 2) {\n                    // Explicitly using EIP-1559\n                    // Populate missing fee data\n                    if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                    }\n                    if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                    }\n                }\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nexport class VoidSigner extends Signer {\n    constructor(address, provider) {\n        logger.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { id } from \"./id\";\nimport { isValidName, namehash } from \"./namehash\";\nimport { hashMessage, messagePrefix } from \"./message\";\nimport { TypedDataEncoder as _TypedDataEncoder } from \"./typed-data\";\nexport { id, namehash, isValidName, messagePrefix, hashMessage, _TypedDataEncoder, };\n//# sourceMappingURL=index.js.map","import { computeHmac, ripemd160, sha256, sha512 } from \"./sha2\";\nimport { SupportedAlgorithm } from \"./types\";\nexport { computeHmac, ripemd160, sha256, sha512, SupportedAlgorithm };\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","\"use strict\";\nimport { formatBytes32String, parseBytes32String } from \"./bytes32\";\nimport { nameprep } from \"./idna\";\nimport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm, Utf8ErrorFuncs, Utf8ErrorReason } from \"./utf8\";\nexport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason, UnicodeNormalizationForm, formatBytes32String, parseBytes32String, nameprep };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) {\n                        console.log(error);\n                    }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","export const version = \"web/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n    }\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData) : null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n            let result = response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    if (attempt < attemptLimit) {\n                        if (response.statusCode === 301 || response.statusCode === 302) {\n                            // Redirection; for now we only support absolute locataions\n                            const location = response.headers.location || \"\";\n                            if (options.method === \"GET\" && location.match(/^https:/)) {\n                                url = response.headers.location;\n                                continue;\n                            }\n                        }\n                        else if (response.statusCode === 429) {\n                            // Exponential back-off throttling\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                let stall = 0;\n                                const retryAfter = response.headers[\"retry-after\"];\n                                if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                    stall = parseInt(retryAfter) * 1000;\n                                }\n                                else {\n                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                }\n                                //console.log(\"Stalling 429\");\n                                yield staller(stall);\n                                continue;\n                            }\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (response.statusCode < 200 || response.statusCode >= 300) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it either returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map","module.exports = __webpack_public_path__ + \"static/img/item_1.ebfddbbb.png\";","export const version = \"wordlists/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","<template>\r\n  <div class=\"user-box\">\r\n    <HeadTop title=\"我的资产\" :isShowTop=\"true\" :isSubHeader=\"false\"></HeadTop>\r\n    <div class=\"top-banner\">\r\n       <div class=\"title\">人人都可以做主播</div>\r\n       <div class=\"desc\">语音直播工作室</div>\r\n       <div class=\"span-btn\">\r\n          火热进行中\r\n       </div>\r\n    </div>\r\n    <div class=\"user-item\">\r\n      <div class=\"title\">我的代币资产</div>\r\n      <div class=\"token-box flex-between\">\r\n        <div class=\"token-item\">\r\n        <div class=\"name\">USDT</div>\r\n        <div class=\"num\">{{usdtBalance}}</div>\r\n      </div>\r\n      <div class=\"token-item\">\r\n        <div class=\"name\">KTT</div>\r\n        <div class=\"num\">{{kttBalance}}</div>\r\n      </div>\r\n      <div class=\"token-item\">\r\n        <div class=\"name\">KTM</div>\r\n        <div class=\"num\">{{ktmBalance}}</div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"user-item\">\r\n      <div class=\"title\">我的业绩</div>\r\n      <div class=\"nft-box flex-between\">\r\n        <!-- <div class=\"nft-item\">\r\n        <div class=\"name\">全网业绩</div>\r\n        <div class=\"num\">{{totalPerformance}}</div>\r\n      </div> -->\r\n      <div class=\"nft-item\">\r\n        <div class=\"name\">我的业绩</div>\r\n        <div class=\"num\">{{investAmount}}</div>\r\n      </div>\r\n      <div class=\"nft-item\">\r\n        <div class=\"name\">小区业绩</div>\r\n        <div class=\"num\">{{teamAmount}}</div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n     <div class=\"user-item\">\r\n      <div class=\"title\">我的NFT</div>\r\n      <div class=\"mynft-box\">\r\n        <div class=\"mynft-item flex-middle\" v-for=\"item in nftArr\" :key=\"item.id\">\r\n          <img class=\"nft-logo\" src=\"@/assets/images/item_1.png\" alt=\"\">\r\n          <div class=\"desc-box flex-item\">\r\n            <div class=\"name\">ID：{{item.id}}</div>\r\n            <div class=\"num\">收益: {{item.reward}}KTT</div>\r\n          </div>\r\n          <div class=\"get-btn\" @click=\"getNftReward(item.id)\">领取</div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport HeadTop from '@/components/HeadTop'\r\nimport { reactive, toRefs, computed, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport config from \"@/utils/config\";\r\nimport swapAbi from \"@/utils/swapAbi\";\r\nimport tokenAbi from \"@/utils/abi\";\r\nimport nftAbi from \"@/utils/nftAbi.json\";\r\nimport BigNumber from 'bignumber.js';\r\nimport { Toast } from 'vant';\r\nimport { Multicall } from 'ethereum-multicall';\r\nexport default {\r\n  components: {\r\n    HeadTop\r\n  },\r\n  setup () {\r\n    const store = useStore()\r\n    const data = reactive({\r\n      address: computed(() => store.state.accounts[0]),\r\n      web3: computed(() => store.state.provider),\r\n      swapContract: null,\r\n      usdtContract: null,\r\n      kttContract: null,\r\n      ktmContract: null,\r\n      nftContract: null,\r\n      usdtBalance: '0.00',\r\n      kttBalance: '0.00',\r\n      ktmBalance: '0.00',\r\n      teamAmount: '0.00',\r\n      investAmount: '0.00',\r\n      totalPerformance: '0.00',\r\n      nftArr: [],\r\n      initContract: () => {\r\n        data.swapContract = new data.web3.eth.Contract(swapAbi, config.swapAddress)\r\n        data.usdtContract = new data.web3.eth.Contract(tokenAbi, config.usdtAddress)\r\n        data.kttContract = new data.web3.eth.Contract(tokenAbi, config.kttAddress)\r\n        data.ktmContract = new data.web3.eth.Contract(tokenAbi, config.ktmAddress)\r\n        data.nftContract = new data.web3.eth.Contract(nftAbi, config.nftAddress)\r\n        data.initData()\r\n      },\r\n      initData: () => {\r\n        data.getBalance()\r\n        data.getNftData()\r\n        data.getPerformance()\r\n      },\r\n       getBalance: async () => {\r\n        let kttDecimals = await data.kttContract.methods.decimals().call()\r\n        let usdtDecimals = await data.usdtContract.methods.decimals().call()\r\n        let ktmDecimals = await data.ktmContract.methods.decimals().call()\r\n        let kttBalance = await data.kttContract.methods.balanceOf(data.address).call()\r\n        let usdtBalance = await data.usdtContract.methods.balanceOf(data.address).call()\r\n        let ktmBalance = await data.ktmContract.methods.balanceOf(data.address).call()\r\n        data.kttBalance =  new BigNumber(kttBalance).dividedBy(10 ** kttDecimals).toFixed(2,1)\r\n        data.usdtBalance =  new BigNumber(usdtBalance).dividedBy(10 ** usdtDecimals).toFixed(2,1)\r\n        data.ktmBalance =  new BigNumber(ktmBalance).dividedBy(10 ** ktmDecimals).toFixed(2,1)\r\n      },\r\n      getPerformance: async () => {\r\n        let totalPerformance = await data.swapContract.methods.totalPerformance().call()\r\n        let userInfo = await data.swapContract.methods.getUserInfo(data.address).call()\r\n        data.totalPerformance = new BigNumber(totalPerformance).dividedBy(10 ** 18).toFixed(2)\r\n        data.teamAmount = new BigNumber(userInfo.teamAmount).dividedBy(10 ** 18).toFixed(2)\r\n        data.investAmount = new BigNumber(userInfo.investAmount).dividedBy(10 ** 18).toFixed(2)\r\n      },\r\n      getNftData: async () => {\r\n        let ids = await data.nftContract.methods.getUserAllTokens(data.address).call()\r\n        let kttDecimals = await data.kttContract.methods.decimals().call()\r\n        const multicall = new Multicall({ multicallCustomContractAddress: config.multicallAddress,web3Instance: data.web3, tryAggregate: false });\r\n        let callArr = []\r\n         for (let index = 0; index < ids.length; index++) {\r\n          const id = ids[index];\r\n          callArr.push(\r\n            { reference: 'reward', methodName: 'getCanReward', methodParameters: [id]}\r\n          )\r\n        }\r\n        let contractCallContext = [\r\n          {\r\n              reference: 'swapContract',\r\n              contractAddress: config.swapAddress,\r\n              abi: swapAbi,\r\n              calls: callArr\r\n          }\r\n        ]\r\n         const list = await multicall.call(contractCallContext)\r\n         let result = list.results.swapContract.callsReturnContext\r\n         console.log(result)\r\n         let arr = []\r\n         for (let i = 0; i < result.length; i++) {\r\n           let item = result[i];\r\n           arr.push({\r\n             id: item.methodParameters[0],\r\n             reward: new BigNumber(data.web3.utils.hexToNumberString(item.returnValues[0].hex)).dividedBy(10** kttDecimals).toFixed(3)\r\n           })\r\n         }\r\n         data.nftArr = arr\r\n      },\r\n      getNftReward: async (id) => {\r\n         try {\r\n          await data.swapContract.methods.getNftReward(id).send({from: data.address})\r\n          Toast('领取成功')\r\n           data.initData()\r\n        } catch (error) {\r\n          Toast('领取失败')\r\n        }\r\n      }\r\n    })\r\n    if (data.address) {\r\n      data.initContract()\r\n    }\r\n    watch(() => data.address, (val) => {\r\n      if (val) {\r\n        data.initContract()\r\n      }\r\n    })\r\n    const refData = toRefs(data);\r\n    return {\r\n      ...refData\r\n    };\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.user-box{\r\n  padding: 15px 16px;\r\n  .top-banner{\r\n    padding: 16px;\r\n    background: url('~@/assets/images/item_bg.png') no-repeat;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    margin-bottom: 30px;\r\n    .title{\r\n      font-size: 23px;\r\n      color: #fff;\r\n      font-weight: 600;\r\n      margin-bottom: 5px;\r\n    }\r\n    .desc{\r\n      font-size: 14px;\r\n      color: rgba(255, 255, 255, 0.55);\r\n      margin-bottom: 15px;\r\n    }\r\n    .span-btn{\r\n      height: 22px;\r\n      line-height: 22px;\r\n      font-size: 10px;\r\n      background: linear-gradient(0deg, rgba(255, 255, 255, 0.8) 0%, #FFFFFF 100%);\r\n      color: #F03C85;\r\n      padding: 0 10px;\r\n      border-radius: 12px;\r\n      display: inline-block;\r\n    }\r\n  }\r\n  .user-item{\r\n    margin-bottom: 24px;\r\n    .title{\r\n      font-size: 16px;\r\n      color: #fff;\r\n      font-weight: 600;\r\n      margin-bottom: 14px;\r\n      position: relative;\r\n      padding-left: 10px;\r\n      &::after{\r\n        content: '';\r\n        width: 3px;\r\n        position: absolute;\r\n        height: 100%;\r\n        left: 0;\r\n        background: #723EE9;\r\n      }\r\n    }\r\n    .token-box{\r\n      flex-wrap: wrap;\r\n    }\r\n    .token-item{\r\n      padding: 20px;\r\n      color: #fff;\r\n      margin: 5px 0;\r\n      border-radius: 6px;\r\n      width: 49%;\r\n      .name{\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n      }\r\n      .num{\r\n        font-weight: 600;\r\n        font-size: 22px;\r\n      }\r\n      &:nth-child(1) {\r\n        background: url('~@/assets/images/item_1.png') no-repeat;\r\n        background-size: cover;\r\n        .name{\r\n          color: #FFE3C8;\r\n        }\r\n      }\r\n      &:nth-child(2) {\r\n        background: url('~@/assets/images/item_2.png') no-repeat;\r\n        background-size: cover;\r\n        .name{\r\n          color: #C3E3FE;\r\n        }\r\n      }\r\n      &:nth-child(3) {\r\n        background: url('~@/assets/images/item_2.png') no-repeat;\r\n        background-size: cover;\r\n        .name{\r\n          color: #C3E3FE;\r\n        }\r\n      }\r\n    }\r\n    .nft-box{\r\n      background: linear-gradient(-90deg, #3C3863 0%, #4A3B76 100%);\r\n      border-radius: 4px;\r\n      padding: 0 20px;\r\n      flex-wrap: wrap;\r\n      .nft-item{\r\n        width: 50%;\r\n         padding:20px 15px;\r\n        .name{\r\n          color: #9D8BD0;\r\n          font-size: 14px;\r\n          margin-bottom: 10px;\r\n        }\r\n        .num{\r\n           color: #fff;\r\n          font-size: 18px;\r\n          font-weight: 600;\r\n        }\r\n      }\r\n    }\r\n    .mynft-box{\r\n      .mynft-item{\r\n        background: linear-gradient(-90deg, #3C3863 0%, #4A3B76 100%);\r\n        padding: 10px;\r\n        border-radius: 4px;\r\n        margin-bottom: 10px;\r\n        img{\r\n          width: 60px;\r\n          height: 60px;\r\n          margin-right: 12px;\r\n          display: block;\r\n        }\r\n        .desc-box{\r\n          .name{\r\n            font-size: 18px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n            margin-bottom: 5px;\r\n          }\r\n          .num{\r\n            font-size: 14px;\r\n            color: #9D8BD0;\r\n          }\r\n        }\r\n        .get-btn{\r\n          background: linear-gradient(270deg, #00DFB2 0%, #00C4DE 100%);\r\n          height: 30px;\r\n          border-radius: 15px;\r\n          padding: 0 15px;\r\n          color: #195A61;\r\n          line-height: 30px;\r\n          font-size: 13px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","export const version = \"contracts/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        if (typeof (name) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n        }\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                }));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Compute the intrinsic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        if (ro.customData) {\n            tx.customData = shallowCopy(ro.customData);\n        }\n        // Remove the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        delete overrides.customData;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction addContractWait(contract, tx) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations) => {\n        return wait(confirmations).then((receipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event = deepCopy(log);\n                let parsed = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                }\n                catch (e) { }\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data, topics) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n                // Useful operations\n                event.removeListener = () => { return contract.provider; };\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                };\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                };\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                };\n                return event;\n            });\n            return receipt;\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tx.wait so the receipt has extra properties\n            addContractWait(contract, tx);\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        logger.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${name}`]) {\n                    uniqueNames[`%${name}`] = [];\n                }\n                uniqueNames[`%${name}`].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            // Add the modified wait that wraps events\n            addContractWait(contract, tx);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"networks/5.5.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n// See: https://chainlist.org\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    optimism: { chainId: 10, name: \"optimism\" },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map","export const version = \"providers/5.5.3\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class Formatter {\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: address,\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : BigNumber.from(difficulty));\n        return result;\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parseTransaction(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nexport function isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexport function isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { namehash } from \"@ethersproject/hash\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport class Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result) {\n    try {\n        return toUtf8String(_parseBytes(result));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result) {\n    if (result === \"0x\") {\n        return null;\n    }\n    const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n    return `https:/\\/gateway.ipfs.io/ipfs/${link}`;\n}\nexport class Resolver {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider, address, name, resolvedAddress) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // e.g. keccak256(\"addr(bytes32,uint256)\")\n            const tx = {\n                to: this.address,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            try {\n                return _parseBytes(yield this.provider.call(tx));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const transaction = {\n                        to: this.address,\n                        data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                    };\n                    const hexBytes = yield this.provider.call(transaction);\n                    // No address\n                    if (hexBytes === \"0x\" || hexBytes === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(hexBytes);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getAvatar() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const linkage = [{ type: \"name\", content: this.name }];\n            try {\n                // test data for ricmoo.eth\n                //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n                const avatar = yield this.getText(\"avatar\");\n                if (avatar == null) {\n                    return null;\n                }\n                for (let i = 0; i < matchers.length; i++) {\n                    const match = avatar.match(matchers[i]);\n                    if (match == null) {\n                        continue;\n                    }\n                    const scheme = match[1].toLowerCase();\n                    switch (scheme) {\n                        case \"https\":\n                            linkage.push({ type: \"url\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"data\":\n                            linkage.push({ type: \"data\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"ipfs\":\n                            linkage.push({ type: \"ipfs\", content: avatar });\n                            return { linkage, url: getIpfsLink(avatar) };\n                        case \"erc721\":\n                        case \"erc1155\": {\n                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                            const selector = (scheme === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                            linkage.push({ type: scheme, content: avatar });\n                            // The owner of this name\n                            const owner = (this._resolvedAddress || (yield this.getAddress()));\n                            const comps = (match[2] || \"\").split(\"/\");\n                            if (comps.length !== 2) {\n                                return null;\n                            }\n                            const addr = yield this.provider.formatter.address(comps[0]);\n                            const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n                            // Check that this account owns the token\n                            if (scheme === \"erc721\") {\n                                // ownerOf(uint256 tokenId)\n                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x6352211e\", tokenId])\n                                }));\n                                if (owner !== tokenOwner) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"owner\", content: tokenOwner });\n                            }\n                            else if (scheme === \"erc1155\") {\n                                // balanceOf(address owner, uint256 tokenId)\n                                const balance = BigNumber.from(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x00fdd58e\", hexZeroPad(owner, 32), tokenId])\n                                }));\n                                if (balance.isZero()) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"balance\", content: balance.toString() });\n                            }\n                            // Call the token contract for the metadata URL\n                            const tx = {\n                                to: this.provider.formatter.address(comps[0]),\n                                data: hexConcat([selector, tokenId])\n                            };\n                            let metadataUrl = _parseString(yield this.provider.call(tx));\n                            if (metadataUrl == null) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n                            // ERC-1155 allows a generic {id} in the URL\n                            if (scheme === \"erc1155\") {\n                                metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                                linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                            }\n                            // Transform IPFS metadata links\n                            if (metadataUrl.match(/^ipfs:/i)) {\n                                metadataUrl = getIpfsLink(metadataUrl);\n                            }\n                            linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                            // Get the token metadata\n                            const metadata = yield fetchJson(metadataUrl);\n                            if (!metadata) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                            // Pull the image URL out\n                            let imageUrl = metadata.image;\n                            if (typeof (imageUrl) !== \"string\") {\n                                return null;\n                            }\n                            if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                                // Allow\n                            }\n                            else {\n                                // Transform IPFS link to gateway\n                                const ipfs = imageUrl.match(matcherIpfs);\n                                if (ipfs == null) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                                imageUrl = getIpfsLink(imageUrl);\n                            }\n                            linkage.push({ type: \"url\", content: imageUrl });\n                            return { linkage, url: imageUrl };\n                        }\n                    }\n                }\n            }\n            catch (error) { }\n            return null;\n        });\n    }\n    getContentHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nexport class BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        const filter = event.filter;\n                        filter.fromBlock = this._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        const runner = this.getLogs(filter).then((logs) => {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach((log) => {\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                this.emit(filter, log);\n                            });\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"call\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            addressOrName = yield addressOrName;\n            if (typeof (addressOrName) !== \"string\") {\n                logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n            }\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const address = yield this._getResolver(name);\n                if (address == null) {\n                    return null;\n                }\n                return new Resolver(this, address, name);\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    _getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get the resolver from the blockchain\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"ENS\", network: network.name });\n            }\n            // keccak256(\"resolver(bytes32)\")\n            const transaction = {\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            };\n            try {\n                return this.formatter.callAddress(yield this.call(transaction));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddress = yield this._getResolver(reverseName);\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            let bytes = arrayify(yield this.call({\n                to: resolverAddress,\n                data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n            }));\n            // Strip off the dynamic string pointer (0x20)\n            if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n                return null;\n            }\n            bytes = bytes.slice(32);\n            // Not a length-prefixed string\n            if (bytes.length < 32) {\n                return null;\n            }\n            // Get the length of the string (from the length-prefix)\n            const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n            bytes = bytes.slice(32);\n            // Length longer than available data\n            if (length > bytes.length) {\n                return null;\n            }\n            const name = toUtf8String(bytes.slice(0, length));\n            // Make sure the reverse record matches the foward record\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    getAvatar(nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = null;\n            if (isHexString(nameOrAddress)) {\n                // Address; reverse lookup\n                const address = this.formatter.address(nameOrAddress);\n                const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n                const resolverAddress = yield this._getResolver(reverseName);\n                if (!resolverAddress) {\n                    return null;\n                }\n                resolver = new Resolver(this, resolverAddress, \"_\", address);\n            }\n            else {\n                // ENS name; forward lookup\n                resolver = yield this.getResolver(nameOrAddress);\n                if (!resolver) {\n                    return null;\n                }\n            }\n            const avatar = yield resolver.getAvatar();\n            if (avatar == null) {\n                return null;\n            }\n            return avatar.url;\n        });\n    }\n    perform(method, params) {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n//# sourceMappingURL=ws.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport class WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        super(url, network);\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n        this._websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this._websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this._websocket.readyState === WebSocket.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this._websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this._websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this._websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic(new.target, \"getNetwork\")(network);\n        apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n        const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nexport class FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        logger.checkNew(new.target, FallbackProvider);\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map","\"use strict\";\nconst IpcProvider = null;\nexport { IpcProvider };\n//# sourceMappingURL=ipc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map","import { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// Experimental\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        const inflightRequest = { request, resolve: null, reject: null };\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    }\n}\n//# sourceMappingURL=json-rpc-batch-provider.js.map","/* istanbul ignore file */\n\"use strict\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map","\"use strict\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// These are load-balancer-based application IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nexport class PocketProvider extends UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = getStatic(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map","\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map","\"use strict\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { BaseProvider, Resolver } from \"./base-provider\";\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\nexport { \n// Abstract Providers (or Abstract-ish)\nProvider, BaseProvider, Resolver, UrlJsonRpcProvider, \n///////////////////////\n// Concrete Providers\nFallbackProvider, AlchemyProvider, AlchemyWebSocketProvider, CloudflareProvider, EtherscanProvider, InfuraProvider, InfuraWebSocketProvider, JsonRpcProvider, JsonRpcBatchProvider, NodesmithProvider, PocketProvider, StaticJsonRpcProvider, Web3Provider, WebSocketProvider, IpcProvider, \n///////////////////////\n// Signer\nJsonRpcSigner, \n///////////////////////\n// Functions\ngetDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, \n///////////////////////\n// Objects\nFormatter };\n//# sourceMappingURL=index.js.map","export const version = \"ethers/5.5.4\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map","export var ExecutionType;\r\n(function (ExecutionType) {\r\n    ExecutionType[\"web3\"] = \"web3\";\r\n    ExecutionType[\"ethers\"] = \"ethers\";\r\n    ExecutionType[\"customHttp\"] = \"custom\";\r\n})(ExecutionType || (ExecutionType = {}));\r\n","export var Networks;\r\n(function (Networks) {\r\n    Networks[Networks[\"mainnet\"] = 1] = \"mainnet\";\r\n    Networks[Networks[\"ropsten\"] = 3] = \"ropsten\";\r\n    Networks[Networks[\"rinkeby\"] = 4] = \"rinkeby\";\r\n    Networks[Networks[\"goerli\"] = 5] = \"goerli\";\r\n    Networks[Networks[\"kovan\"] = 42] = \"kovan\";\r\n    Networks[Networks[\"bsc\"] = 56] = \"bsc\";\r\n    Networks[Networks[\"bsc_testnet\"] = 97] = \"bsc_testnet\";\r\n    Networks[Networks[\"xdai\"] = 100] = \"xdai\";\r\n    Networks[Networks[\"matic\"] = 137] = \"matic\";\r\n    Networks[Networks[\"mumbai\"] = 80001] = \"mumbai\";\r\n    Networks[Networks[\"avalauncheFuji\"] = 43113] = \"avalauncheFuji\";\r\n    Networks[Networks[\"avalauncheMainnet\"] = 43114] = \"avalauncheMainnet\";\r\n    Networks[Networks[\"etherlite\"] = 111] = \"etherlite\";\r\n    Networks[Networks[\"arbitrum\"] = 42161] = \"arbitrum\";\r\n    Networks[Networks[\"fantom\"] = 250] = \"fantom\";\r\n})(Networks || (Networks = {}));\r\n","var Utils = /** @class */ (function () {\r\n    function Utils() {\r\n    }\r\n    /**\r\n     * Deep clone a object\r\n     * @param object The object\r\n     */\r\n    Utils.deepClone = function (object) {\r\n        return JSON.parse(JSON.stringify(object));\r\n    };\r\n    return Utils;\r\n}());\r\nexport { Utils };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { BigNumber, ethers } from 'ethers';\r\nimport { defaultAbiCoder } from 'ethers/lib/utils';\r\nimport { ExecutionType, Networks } from './enums';\r\nimport { Utils } from './utils';\r\nvar Multicall = /** @class */ (function () {\r\n    function Multicall(_options) {\r\n        this._options = _options;\r\n        this.ABI = [\r\n            {\r\n                constant: false,\r\n                inputs: [\r\n                    {\r\n                        components: [\r\n                            { name: 'target', type: 'address' },\r\n                            { name: 'callData', type: 'bytes' },\r\n                        ],\r\n                        name: 'calls',\r\n                        type: 'tuple[]',\r\n                    },\r\n                ],\r\n                name: 'aggregate',\r\n                outputs: [\r\n                    { name: 'blockNumber', type: 'uint256' },\r\n                    { name: 'returnData', type: 'bytes[]' },\r\n                ],\r\n                payable: false,\r\n                stateMutability: 'nonpayable',\r\n                type: 'function',\r\n            },\r\n            {\r\n                inputs: [\r\n                    {\r\n                        internalType: 'bool',\r\n                        name: 'requireSuccess',\r\n                        type: 'bool',\r\n                    },\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: 'address',\r\n                                name: 'target',\r\n                                type: 'address',\r\n                            },\r\n                            {\r\n                                internalType: 'bytes',\r\n                                name: 'callData',\r\n                                type: 'bytes',\r\n                            },\r\n                        ],\r\n                        internalType: 'struct Multicall2.Call[]',\r\n                        name: 'calls',\r\n                        type: 'tuple[]',\r\n                    },\r\n                ],\r\n                name: 'tryBlockAndAggregate',\r\n                outputs: [\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'blockNumber',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'blockHash',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: 'bool',\r\n                                name: 'success',\r\n                                type: 'bool',\r\n                            },\r\n                            {\r\n                                internalType: 'bytes',\r\n                                name: 'returnData',\r\n                                type: 'bytes',\r\n                            },\r\n                        ],\r\n                        internalType: 'struct Multicall2.Result[]',\r\n                        name: 'returnData',\r\n                        type: 'tuple[]',\r\n                    },\r\n                ],\r\n                stateMutability: 'nonpayable',\r\n                type: 'function',\r\n            },\r\n        ];\r\n        if (this._options.web3Instance) {\r\n            this._executionType = ExecutionType.web3;\r\n            return;\r\n        }\r\n        if (this._options.ethersProvider) {\r\n            this._executionType = ExecutionType.ethers;\r\n            return;\r\n        }\r\n        if (this._options.nodeUrl) {\r\n            this._executionType = ExecutionType.customHttp;\r\n            return;\r\n        }\r\n        throw new Error(\r\n        // tslint:disable-next-line: max-line-length\r\n        'Your options passed in our incorrect they need to match either `MulticallOptionsEthers`, `MulticallOptionsWeb3` or `MulticallOptionsCustomJsonRpcProvider` interfaces');\r\n    }\r\n    /**\r\n     * Call all the contract calls in 1\r\n     * @param calls The calls\r\n     */\r\n    Multicall.prototype.call = function (contractCallContexts) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var aggregateResponse, returnObject, response, contractCallsResults, originalContractCallContext, returnObjectResult, method, methodContext, originalContractCallMethodContext, outputTypes, decodedReturnValues;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!Array.isArray(contractCallContexts)) {\r\n                            contractCallContexts = [contractCallContexts];\r\n                        }\r\n                        return [4 /*yield*/, this.execute(this.buildAggregateCallContext(contractCallContexts))];\r\n                    case 1:\r\n                        aggregateResponse = _a.sent();\r\n                        returnObject = {\r\n                            results: {},\r\n                            blockNumber: aggregateResponse.blockNumber,\r\n                        };\r\n                        for (response = 0; response < aggregateResponse.results.length; response++) {\r\n                            contractCallsResults = aggregateResponse.results[response];\r\n                            originalContractCallContext = contractCallContexts[contractCallsResults.contractContextIndex];\r\n                            returnObjectResult = {\r\n                                originalContractCallContext: Utils.deepClone(originalContractCallContext),\r\n                                callsReturnContext: [],\r\n                            };\r\n                            for (method = 0; method < contractCallsResults.methodResults.length; method++) {\r\n                                methodContext = contractCallsResults.methodResults[method];\r\n                                originalContractCallMethodContext = originalContractCallContext.calls[methodContext.contractMethodIndex];\r\n                                outputTypes = this.findOutputTypesFromAbi(originalContractCallContext.abi, originalContractCallMethodContext.methodName);\r\n                                if (this._options.tryAggregate && !methodContext.result.success) {\r\n                                    returnObjectResult.callsReturnContext.push(Utils.deepClone({\r\n                                        returnValues: [],\r\n                                        decoded: false,\r\n                                        reference: originalContractCallMethodContext.reference,\r\n                                        methodName: originalContractCallMethodContext.methodName,\r\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\r\n                                        success: false,\r\n                                    }));\r\n                                    continue;\r\n                                }\r\n                                if (outputTypes && outputTypes.length > 0) {\r\n                                    decodedReturnValues = defaultAbiCoder.decode(\r\n                                    // tslint:disable-next-line: no-any\r\n                                    outputTypes, this.getReturnDataFromResult(methodContext.result));\r\n                                    returnObjectResult.callsReturnContext.push(Utils.deepClone({\r\n                                        returnValues: this.formatReturnValues(decodedReturnValues),\r\n                                        decoded: true,\r\n                                        reference: originalContractCallMethodContext.reference,\r\n                                        methodName: originalContractCallMethodContext.methodName,\r\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\r\n                                        success: true,\r\n                                    }));\r\n                                }\r\n                                else {\r\n                                    returnObjectResult.callsReturnContext.push(Utils.deepClone({\r\n                                        returnValues: this.getReturnDataFromResult(methodContext.result),\r\n                                        decoded: false,\r\n                                        reference: originalContractCallMethodContext.reference,\r\n                                        methodName: originalContractCallMethodContext.methodName,\r\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\r\n                                        success: true,\r\n                                    }));\r\n                                }\r\n                            }\r\n                            returnObject.results[returnObjectResult.originalContractCallContext.reference] = returnObjectResult;\r\n                        }\r\n                        return [2 /*return*/, returnObject];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get return data from result\r\n     * @param result The result\r\n     */\r\n    // tslint:disable-next-line: no-any\r\n    Multicall.prototype.getReturnDataFromResult = function (result) {\r\n        if (this._options.tryAggregate) {\r\n            return result.returnData;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Format return values so its always an array\r\n     * @param decodedReturnValues The decoded return values\r\n     */\r\n    // tslint:disable-next-line: no-any\r\n    Multicall.prototype.formatReturnValues = function (decodedReturnValues) {\r\n        var decodedReturnResults = decodedReturnValues;\r\n        if (decodedReturnValues.length === 1) {\r\n            decodedReturnResults = decodedReturnValues[0];\r\n        }\r\n        if (Array.isArray(decodedReturnResults)) {\r\n            return decodedReturnResults;\r\n        }\r\n        return [decodedReturnResults];\r\n    };\r\n    /**\r\n     * Build aggregate call context\r\n     * @param contractCallContexts The contract call contexts\r\n     */\r\n    Multicall.prototype.buildAggregateCallContext = function (contractCallContexts) {\r\n        var aggregateCallContext = [];\r\n        for (var contract = 0; contract < contractCallContexts.length; contract++) {\r\n            var contractContext = contractCallContexts[contract];\r\n            var executingInterface = new ethers.utils.Interface(JSON.stringify(contractContext.abi));\r\n            for (var method = 0; method < contractContext.calls.length; method++) {\r\n                // https://github.com/ethers-io/ethers.js/issues/211\r\n                var methodContext = contractContext.calls[method];\r\n                // tslint:disable-next-line: no-unused-expression\r\n                var encodedData = executingInterface.encodeFunctionData(methodContext.methodName, methodContext.methodParameters);\r\n                aggregateCallContext.push({\r\n                    contractContextIndex: Utils.deepClone(contract),\r\n                    contractMethodIndex: Utils.deepClone(method),\r\n                    target: contractContext.contractAddress,\r\n                    encodedData: encodedData,\r\n                });\r\n            }\r\n        }\r\n        return aggregateCallContext;\r\n    };\r\n    /**\r\n     * Find output types from abi\r\n     * @param abi The abi\r\n     * @param methodName The method name\r\n     */\r\n    Multicall.prototype.findOutputTypesFromAbi = function (abi, methodName) {\r\n        var _a;\r\n        for (var i = 0; i < abi.length; i++) {\r\n            if (((_a = abi[i].name) === null || _a === void 0 ? void 0 : _a.trim()) === methodName.trim()) {\r\n                return abi[i].outputs;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * Execute the multicall contract call\r\n     * @param calls The calls\r\n     */\r\n    Multicall.prototype.execute = function (calls) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this._executionType;\r\n                        switch (_a) {\r\n                            case ExecutionType.web3: return [3 /*break*/, 1];\r\n                            case ExecutionType.ethers: return [3 /*break*/, 3];\r\n                            case ExecutionType.customHttp: return [3 /*break*/, 3];\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 1: return [4 /*yield*/, this.executeWithWeb3(calls)];\r\n                    case 2: return [2 /*return*/, _b.sent()];\r\n                    case 3: return [4 /*yield*/, this.executeWithEthersOrCustom(calls)];\r\n                    case 4: return [2 /*return*/, _b.sent()];\r\n                    case 5: throw new Error(this._executionType + \" is not defined\");\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Execute aggregate with web3 instance\r\n     * @param calls The calls context\r\n     */\r\n    Multicall.prototype.executeWithWeb3 = function (calls) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var web3, networkId, contract, contractResponse, contractResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        web3 = this.getTypedOptions().web3Instance;\r\n                        return [4 /*yield*/, web3.eth.net.getId()];\r\n                    case 1:\r\n                        networkId = _a.sent();\r\n                        contract = new web3.eth.Contract(this.ABI, this.getContractBasedOnNetwork(networkId));\r\n                        if (!this._options.tryAggregate) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, contract.methods\r\n                                .tryBlockAndAggregate(false, this.mapCallContextToMatchContractFormat(calls))\r\n                                .call()];\r\n                    case 2:\r\n                        contractResponse = (_a.sent());\r\n                        contractResponse.blockNumber = BigNumber.from(contractResponse.blockNumber);\r\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\r\n                    case 3: return [4 /*yield*/, contract.methods\r\n                            .aggregate(this.mapCallContextToMatchContractFormat(calls))\r\n                            .call()];\r\n                    case 4:\r\n                        contractResponse = (_a.sent());\r\n                        contractResponse.blockNumber = BigNumber.from(contractResponse.blockNumber);\r\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Execute with ethers using passed in provider context or custom one\r\n     * @param calls The calls\r\n     */\r\n    Multicall.prototype.executeWithEthersOrCustom = function (calls) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var ethersProvider, customProvider, network, contract, contractResponse, contractResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        ethersProvider = this.getTypedOptions()\r\n                            .ethersProvider;\r\n                        if (!ethersProvider) {\r\n                            customProvider = this.getTypedOptions();\r\n                            if (customProvider.nodeUrl) {\r\n                                ethersProvider = new ethers.providers.JsonRpcProvider(customProvider.nodeUrl);\r\n                            }\r\n                            else {\r\n                                ethersProvider = ethers.getDefaultProvider();\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, ethersProvider.getNetwork()];\r\n                    case 1:\r\n                        network = _a.sent();\r\n                        contract = new ethers.Contract(this.getContractBasedOnNetwork(network.chainId), this.ABI, ethersProvider);\r\n                        if (!this._options.tryAggregate) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, contract.callStatic.tryBlockAndAggregate(false, this.mapCallContextToMatchContractFormat(calls))];\r\n                    case 2:\r\n                        contractResponse = (_a.sent());\r\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\r\n                    case 3: return [4 /*yield*/, contract.callStatic.aggregate(this.mapCallContextToMatchContractFormat(calls))];\r\n                    case 4:\r\n                        contractResponse = (_a.sent());\r\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Build up the aggregated response from the contract response mapping\r\n     * metadata from the calls\r\n     * @param contractResponse The contract response\r\n     * @param calls The calls\r\n     */\r\n    Multicall.prototype.buildUpAggregateResponse = function (contractResponse, calls) {\r\n        var aggregateResponse = {\r\n            blockNumber: contractResponse.blockNumber.toNumber(),\r\n            results: [],\r\n        };\r\n        var _loop_1 = function (i) {\r\n            var existingResponse = aggregateResponse.results.find(function (c) { return c.contractContextIndex === calls[i].contractContextIndex; });\r\n            if (existingResponse) {\r\n                existingResponse.methodResults.push({\r\n                    result: contractResponse.returnData[i],\r\n                    contractMethodIndex: calls[i].contractMethodIndex,\r\n                });\r\n            }\r\n            else {\r\n                aggregateResponse.results.push({\r\n                    methodResults: [\r\n                        {\r\n                            result: contractResponse.returnData[i],\r\n                            contractMethodIndex: calls[i].contractMethodIndex,\r\n                        },\r\n                    ],\r\n                    contractContextIndex: calls[i].contractContextIndex,\r\n                });\r\n            }\r\n        };\r\n        for (var i = 0; i < contractResponse.returnData.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return aggregateResponse;\r\n    };\r\n    /**\r\n     * Map call contract to match contract format\r\n     * @param calls The calls context\r\n     */\r\n    Multicall.prototype.mapCallContextToMatchContractFormat = function (calls) {\r\n        return calls.map(function (call) {\r\n            return {\r\n                target: call.target,\r\n                callData: call.encodedData,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Get typed options\r\n     */\r\n    Multicall.prototype.getTypedOptions = function () {\r\n        return this._options;\r\n    };\r\n    /**\r\n     * Get the contract based on the network\r\n     * @param tryAggregate The tryAggregate\r\n     * @param network The network\r\n     */\r\n    Multicall.prototype.getContractBasedOnNetwork = function (network) {\r\n        // if they have overriden the multicall custom contract address then use that\r\n        if (this._options.multicallCustomContractAddress) {\r\n            return this._options.multicallCustomContractAddress;\r\n        }\r\n        switch (network) {\r\n            case Networks.mainnet:\r\n            case Networks.kovan:\r\n            case Networks.rinkeby:\r\n            case Networks.ropsten:\r\n            case Networks.goerli:\r\n                return '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696';\r\n            case Networks.bsc:\r\n                return '0xC50F4c1E81c873B2204D7eFf7069Ffec6Fbe136D';\r\n            case Networks.bsc_testnet:\r\n                return '0x6e5BB1a5Ad6F68A8D7D6A5e47750eC15773d6042';\r\n            case Networks.xdai:\r\n                return '0x2325b72990D81892E0e09cdE5C80DD221F147F8B';\r\n            case Networks.mumbai:\r\n                return '0xe9939e7Ea7D7fb619Ac57f648Da7B1D425832631';\r\n            case Networks.matic:\r\n                return '0x275617327c958bD06b5D6b871E7f491D76113dd8';\r\n            case Networks.etherlite:\r\n                return '0x21681750D7ddCB8d1240eD47338dC984f94AF2aC';\r\n            case Networks.arbitrum:\r\n                return '0x80C7DD17B01855a6D2347444a0FCC36136a314de';\r\n            case Networks.avalauncheFuji:\r\n                return '0x3D015943d2780fE97FE3f69C97edA2CCC094f78c';\r\n            case Networks.avalauncheMainnet:\r\n                return '0xed386Fe855C1EFf2f843B910923Dd8846E45C5A4';\r\n            case Networks.fantom:\r\n                return '0xD98e3dBE5950Ca8Ce5a4b59630a5652110403E5c';\r\n            default:\r\n                throw new Error(\"Network - \" + network + \" is not got a contract defined it only supports mainnet, kovan, rinkeby, bsc and ropsten\");\r\n        }\r\n    };\r\n    return Multicall;\r\n}());\r\nexport { Multicall };\r\n","import { render } from \"./index.vue?vue&type=template&id=2e63bab3&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=2e63bab3&lang=less&scoped=true\"\n\nimport exportComponent from \"F:\\\\activeSelf\\\\ketai_vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2e63bab3\"]])\n\nexport default __exports__","export const version = \"solidity/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-provider/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"hdnode/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","export const version = \"random/5.5.1\";\n//# sourceMappingURL=_version.js.map"],"sourceRoot":""}